from sqlalchemy import Column, Integer, String, Float, DateTime, create_engine, ForeignKey\\nfrom sqlalchemy.ext.declarative import declarative_base\\\\\nBase = declarative_base()\\\\\nclass Trade(Base):\\\\\nid = Column(Integer, primary_key=True)\\\nsymbol = Column(String, nullable=False)\\\nquantity = Column(Integer, nullable=False)\\\nprice = Column(Float, nullable=False)\\\nexecuted_price = Column(Float, nullable=True)\\\norder_type = Column(String, nullable=False)\\\nstatus = Column(String, nullable=False)\\\ntimestamp = Column(DateTime, nullable=False, default=datetime.utcnow)\\\nbroker = Column(String, nullable=False)\\\nstrategy = Column(String, nullable=False)\\\nprofit_loss = Column(Float, nullable=True)\\\nsuccess = Column(String, nullable=True)\\\nbalance_id = Column(Integer, ForeignKey('balances.id'))\\\\n\\nclass AccountInfo(Base):\\\\\nid = Column(Integer, primary_key=True, autoincrement=True)\\\nbroker = Column(String, unique=True)\\\nvalue = Column(Float)\\\\n\\nclass Balance(Base):\\\\\nid = Column(Integer, primary_key=True, autoincrement=True)\\\nbroker = Column(String)\\\nstrategy = Column(String)\\\ninitial_balance = Column(Float, default=0.0)\\\ntotal_balance = Column(Float, default=0.0)\\\ntimestamp = Column(DateTime, nullable=False, default=datetime.utcnow)\\\ntrades = relationship('Trade', backref='balance')\\\npositions = relationship('Position', back_populates='balance')\\\\n\\nclass Position(Base):\\\\\nid = Column(Integer, primary_key=True, autoincrement=True)\\\nbalance_id = Column(Integer, ForeignKey('balances.id'), nullable=False)\\\nsymbol = Column(String, nullable=False)\\\nquantity = Column(Float, nullable=False)\\\nlatest_price = Column(Float, nullable=False)\\\nlast_updated = Column(DateTime, default=datetime.utcnow, nullable=False)\\\\n\\nbalance = relationship('Balance', back_populates='positions')\\\\n\\ndef drop_then_init_db(engine):\\\\\n    """Drops existing tables and creates new tables."""\\\\\\n    Base.metadata.drop_all(engine)\\\\\n    Base.metadata.create_all(engine)\\\\n\\ndef init_db(engine):\\\\\n    """Creates new tables."""\\\\\\n    Base.metadata.create_all(engine)\\\\\n