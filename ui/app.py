from flask import Flask, jsonify, render_template, request\"nfrom sqlalchemy.orm import sessionmaker\"nfrom sqlalchemy import create_engine, func\"nfrom database.models import Trade, AccountInfo, Balance, Position\"nimport os\"n\"napp = Flask(\"TradingAPI\", template_folder='ui/templates')\"nDATABASE_URL = \"sqlite:///trading.db\"\"nengine = create_engine(DATABASE_URL)\"nSession = sessionmaker(bind=engine)\"n\"n@app.route('/position_page')\"ndef positions():\"n    try:\"n        return render_template('positions.html')\"n    except Exception as e:\"n        app.logger.error(f\"Error rendering index.html: {e}\")\"n        return \"Internal Server Error\", 500\"n\"n@app.route('/')\"ndef index():\"n    try:\"n        return render_template('index.html')\"n    except Exception as e:\"n        app.logger.error(f\"Error rendering index.html: {e}\")\"n        return \"Internal Server Error\", 500\"n\"n# Static files are served automatically from the 'static' folder\"n@app.route('/trades_per_strategy')\"ndef trades_per_strategy():\"n    trades_count = app.session.query(Trade.strategy, Trade.broker, func.count(Trade.id)).group_by(Trade.strategy, Trade.broker).all()\"n    trades_count_serializable = [{'strategy': strategy, 'broker': broker, 'count': count} for strategy, broker, count in trades_count]\"n    return jsonify({'trades_per_strategy': trades_count_serializable})\"n\"n@app.route('/historic_balance_per_strategy', methods=['GET'])\"ndef historic_balance_per_strategy():\"n    try:\"n        historical_balances = app.session.query(\